# auto-generated by grc.converter

id: FDC_SegmentDetection
label: SegmentDetection
category: '[FDC]'

parameters:
-   id: ID
    label: ID
    dtype: int
    default: '0'
-   id: blocklen
    label: Blocklen
    dtype: int
    default: blocklen
    hide: none
-   id: relinvovl
    label: Rel. inverse Overlap
    dtype: int
    default: '4'
-   id: seg_start
    label: Segment Start
    dtype: float
    default: '0.1'
-   id: seg_stop
    label: Segment Stop
    dtype: float
    default: '0.9'
-   id: thresh
    label: Threshold [dB]
    dtype: float
    default: '6.0'
-   id: minchandist
    label: Minimum channel distance
    dtype: float
    default: '0.02'
-   id: window_flank_puffer
    label: Minimum channel puffer
    dtype: float
    default: '0.1'
-   id: maxblocks_to_emit
    label: Maximum Blocks
    dtype: int
    default: '256'
-   id: channel_deactivation_delay
    label: Channel deactivation delay
    dtype: int
    default: '1'
-   id: messageoutput
    label: Message Output
    dtype: enum
    options: ['True', 'False']
    option_labels: ['Yes', 'No']
-   id: fileoutput
    label: File Output
    dtype: enum
    options: ['True', 'False']
    option_labels: ['Yes', 'No']
-   id: path
    label: Output path
    dtype: string
    default: /home/user/...
-   id: threads
    label: Threaded
    dtype: enum
    options: ['True', 'False']
    option_labels: ['Yes', 'No']
-   id: verbose
    label: Log/verbose destination
    dtype: enum
    options: ['0', '1', '2']
    option_labels: [None, Print to console, Log to file]

inputs:
-   domain: stream
    dtype: complex
    vlen: ${ blocklen }

outputs:
-   domain: message
    id: msgout
    optional: true

templates:
    imports: import gnuradio.FDC as FDC
    make: FDC.SegmentDetection(${ID}, ${blocklen}, ${relinvovl}, ${seg_start}, ${seg_stop},
        ${thresh}, ${minchandist}, ${window_flank_puffer}, ${maxblocks_to_emit}, ${channel_deactivation_delay},
        ${messageoutput}, ${fileoutput}, ${path}, ${threads}, ${verbose})

file_format: 1
