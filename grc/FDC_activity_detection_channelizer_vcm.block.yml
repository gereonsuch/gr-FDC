# auto-generated by grc.converter

id: FDC_activity_detection_channelizer_vcm
label: Activity detection Channelizer
category: '[FDC]'

parameters:
-   id: blocklen
    label: Blocklen
    dtype: int
    default: 2**12
-   id: segments
    label: Segments
    dtype: raw
    default: '[ [0.1,0.3], [0.5,0.6], ... ]'
-   id: minchandist
    label: Minimum channel distance
    dtype: float
    default: samprate / 20e3
-   id: channelflankpuffer
    label: Channel flank puffer
    dtype: float
    default: '0.1'
-   id: thresh
    label: Threshold
    dtype: float
    default: '8.0'
-   id: relinvovl
    label: Relative inverse overlap
    dtype: int
    default: '4'
-   id: maxblocks
    label: Max consecutive blocks
    dtype: int
    default: '256'
-   id: channeldeactivationdelay
    label: Deactivation delay
    dtype: int
    default: '2'
-   id: message
    label: Channels to message
    dtype: enum
    options: ['True', 'False']
    option_labels: ['Yes', 'No']
    option_attributes:
        hide: ['0', '0']
-   id: fileoutput
    label: Channels to files
    dtype: enum
    options: ['True', 'False']
    option_labels: ['Yes', 'No']
    option_attributes:
        hide: ['0', '1']
-   id: path
    label: Folder to store files
    dtype: string
    default: /home/...
    hide: fileoutput.hide
-   id: threads
    label: Threaded
    dtype: enum
    options: ['True', 'False']
    option_labels: ['Yes', 'No']
-   id: verbose
    label: Log/verbose destination
    dtype: enum
    options: ['0', '1', '2']
    option_labels: [None, Print to console, Log to file]

inputs:
-   domain: stream
    dtype: complex
    vlen: blocklen

outputs:
-   domain: message
    id: msgout
    optional: true
    hide: ${ message.hide }

templates:
    imports: import gnuradio.FDC as FDC
    make: FDC.activity_detection_channelizer_vcm(${blocklen}, ${segments}, ${thresh},
        ${relinvovl}, ${maxblocks}, ${message}, ${fileoutput}, ${path}, ${threads},
        ${minchandist}, ${channeldeactivationdelay}, ${channelflankpuffer}, ${verbose},
        ${logfile})

file_format: 1
