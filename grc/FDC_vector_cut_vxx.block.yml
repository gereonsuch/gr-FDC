# auto-generated by grc.converter

id: FDC_vector_cut_vxx
label: Vector Cut
category: '[FDC]'

parameters:
-   id: type
    label: IO Type
    dtype: enum
    options: [complex, float, int, short, byte]
    option_attributes:
        size: [gr.sizeof_gr_complex, gr.sizeof_float, gr.sizeof_int, gr.sizeof_short,
            gr.sizeof_char]
    hide: part
-   id: veclen
    label: Input length
    dtype: int
    default: '4096'
    hide: none
-   id: blocklen
    label: Output length
    dtype: int
    default: '512'
    hide: none
-   id: offset
    label: Offset
    dtype: int
    default: '123'

inputs:
-   domain: stream
    dtype: ${ type }
    vlen: ${ veclen }

outputs:
-   domain: stream
    dtype: ${ type }
    vlen: ${ blocklen }
asserts:
- ${ veclen >= 0 }
- ${ blocklen >= 0 }
- ${ offset >= -1 }
- ${ veclen > blocklen }
- ${ veclen > blocklen + offset-1 }

templates:
    imports: import gnuradio.FDC as FDC
    make: FDC.vector_cut_vxx(${itemsize}, ${veclen}, ${offset}, ${blocklen})

documentation: "__Vector Cut__\n\n * IO Type is datatype of input and output\n * Input\
    \ length is input vector length\n * Output length is output vector length\n *\
    \ Offset is the number of samples shifted\n \nExample:\n\nInput length = 4\nOutput\
    \ length = 2\nOffset = 1\n\nFrom each vector on the input, Vector Cut outputs\
    \ only\nsamples 1 and 2 starting. Offset=0 equals the first 2 samples."

file_format: 1
