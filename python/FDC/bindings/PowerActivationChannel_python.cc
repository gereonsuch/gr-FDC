/*
 * Copyright 2022 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(PowerActivationChannel.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(fab0af7801c3488b93bef4155043c1a2)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/FDC/PowerActivationChannel.h>
// pydoc.h is automatically generated in the build directory
#include <PowerActivationChannel_pydoc.h>

void bind_PowerActivationChannel(py::module& m)
{

    using PowerActivationChannel    = ::gr::FDC::PowerActivationChannel;


    py::class_<PowerActivationChannel, gr::sync_block, gr::block, gr::basic_block,
        std::shared_ptr<PowerActivationChannel>>(m, "PowerActivationChannel", D(PowerActivationChannel))

        .def(py::init(&PowerActivationChannel::make),
           py::arg("v_blocklen"),
           py::arg("v_cfreq"),
           py::arg("v_bw"),
           py::arg("v_relinvovl"),
           py::arg("v_thresh"),
           py::arg("v_maxblocks"),
           py::arg("v_deactivation_delay"),
           py::arg("v_msg"),
           py::arg("v_fileoutput"),
           py::arg("v_path"),
           py::arg("verbose"),
           py::arg("v_ID"),
           D(PowerActivationChannel,make)
        )
        



        ;




}








