/*
 * Copyright 2022 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(activity_detection_channelizer_vcm.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(fcf6012ec258cd4476ced293e012efd2)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/FDC/activity_detection_channelizer_vcm.h>
// pydoc.h is automatically generated in the build directory
#include <activity_detection_channelizer_vcm_pydoc.h>

void bind_activity_detection_channelizer_vcm(py::module& m)
{

    using activity_detection_channelizer_vcm    = ::gr::FDC::activity_detection_channelizer_vcm;


    py::class_<activity_detection_channelizer_vcm, gr::sync_block, gr::block, gr::basic_block,
        std::shared_ptr<activity_detection_channelizer_vcm>>(m, "activity_detection_channelizer_vcm", D(activity_detection_channelizer_vcm))

        .def(py::init(&activity_detection_channelizer_vcm::make),
           py::arg("v_blocklen"),
           py::arg("v_segments"),
           py::arg("v_thresh"),
           py::arg("v_relinvovl"),
           py::arg("v_maxblocks"),
           py::arg("v_message"),
           py::arg("v_fileoutput"),
           py::arg("v_path"),
           py::arg("v_threads"),
           py::arg("v_minchandist"),
           py::arg("v_channel_deactivation_delay"),
           py::arg("v_window_flank_puffer"),
           py::arg("verbose"),
           D(activity_detection_channelizer_vcm,make)
        )
        



        ;




}








